# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
general:
  branches:
    only:
     - feature/circleci
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.3.1-trusty
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/mysql
    environment:
      - DF_STAGING_DB_ADAPTER: mysql2
      - DF_STAGING_DB_HOST: localhost
      - DF_STAGING_DB_DATABASE: doubtfire_staging
      - DF_STAGING_DB_USERNAME: root
      - DF_STAGING_DB_PASSWORD: ""
      - DF_SECRET_KEY_BASE: test_staging
      - DF_SECRET_KEY_ATTR: test_staging
      - DF_SECRET_KEY_DEVISE: test_staging

    working_directory: ~/doubtfire_api

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: |
          apt-get update
          sudo apt-get install -y ghostscript imagemagick libmagic-dev libmagickwand-dev libmagic-dev python-pygments libav-tools texlive-full
              
      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle --without production replica

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
        
      # Database setup
      - run: RAILS_ENV=staging bundle exec rake db:create
      - run: echo "n" | RAILS_ENV=staging bundle exec rake db:populate

      # run tests!
      - run:
          name: run tests
          command: RAILS_ENV=staging bundle exec rake test
          