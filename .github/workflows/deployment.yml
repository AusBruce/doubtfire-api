name: create-doubtfire-deployment
on:
  push:
    tags:
      - 'v*'
  deployment:
  workflow_dispatch:
jobs:
  docker-api-server:
    environment: deployment-secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Setup meta for api server
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: lmsdoubtfire/apiServer
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - name: Build and push api server
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: deployApi.Dockerfile
          context: .
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  docker-app-server:
    environment: deployment-secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Setup meta for app server
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: lmsdoubtfire/appServer
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - name: Build and push app server
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: deployAppSvr.Dockerfile
          context: .
          tags: ${{ steps.docker_meta.outputs.tags }}
          push: true
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
